name: Daily Website Test

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: |
        npm install -g http-server
        npm install -D @playwright/test

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Start local server
      run: |
        http-server . -p 8080 &
        sleep 5  # Give the server some time to start

    - name: Create test script
      run: |
        cat << 'EOT' > test.js
        const { test, expect } = require('@playwright/test');

        const urls = [
          'https://www.numerade.com/ask/question/a-gas-mixture-is-made-from-156-g-of-bromine-gas-and-138-g-of-chlorine-gas-the-total-pressure-of-the-mixture-is-0632-atm-what-is-the-partial-pressure-of-the-bromine-gas/',
          'https://www.numerade.com/questions/select-the-correct-alternative-from-the-given-choices-a-100-mathrmkm-long-cable-runs-at-1536-mathrmm/',
          'https://www.numerade.com/questions/indicate-whether-each-of-the-following-nuclides-lies-within-the-belt-of-stability-in-figure-212-a-ne/'
        ];

        test('Website functionality', async ({ page }) => {
          console.log('Starting test');
          await page.goto('http://localhost:8080');
          console.log('Navigated to localhost');
          
          for (const url of urls) {
            console.log(`Testing URL: ${url}`);
            await page.fill('#inputContainer input', url);
            await page.click('#inputContainer button');
            
            console.log('Waiting for video to load');
            await page.waitForSelector('#videoWrapper iframe', { state: 'attached', timeout: 30000 });
            
            console.log('Checking if video is present');
            const videoFrame = await page.$('#videoWrapper iframe');
            expect(videoFrame).not.toBeNull();
            
            console.log('Clearing input');
            await page.fill('#inputContainer input', '');
          }
          console.log('Test completed');
        });
        EOT

    - name: Display test script content
      run: cat test.js

    - name: Run Playwright tests
      run: npx playwright test test.js --debug

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: playwright-report
        path: test-results/